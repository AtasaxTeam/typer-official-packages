{
    "name": "apm",
    "description": "A lil' better Package Manager for Typer. <span class=\"red\">May be outdated!</span> Author: SABERA7",
    "executeit": "async (data) => { if (data.split(' ')[1] == 'install') {log(`Downloading package ${data.split(' ')[2]}...`);await fetch(`https://raw.githubusercontent.com/atasax-inc/typer-official-packages/main/${data.split(' ')[2]}`).then(async res => {if (res.status != 200) {if (res.status == 404) {return `Downloading package ${data.split(' ')[2]} failed: Package not found. Use 'pkm list all' to see all available packages.`;}else {return `Downloading package ${data.split(' ')[2]} failed with error code ${res.status}.`;}};let text = await res.json();commands_data[text.name] = {description: text.description,executeit: eval(text.executeit)};let packs = localStorage.getItem('pkmPacks') || [];if (packs != []) {packs = JSON.parse(packs);}packs.push(data.split(' ')[2]);localStorage.setItem('pkmPacks', JSON.stringify(packs));return `Package downloaded successfully.`;})}else if (data.split(' ')[1] == 'list') {let retxt = 'Available official Typer packages:<br>';await fetch('https://api.github.com/repos/atasax-inc/typer-official-packages/git/trees/main').then(async res => {let text = res.json();for (key in text.tree) {const data = text.tree[key];if(data['path' == 'README.md']){continue};await fetch(`https://raw.githubusercontent.com/atasax-inc/typer-official-packages/main/${data['path']}`).then(async res => {let txt = await res.json();retxt += `<b>${data['path']}</b> - ${txt.description}<br>`;})}return retxt;})}else if (data.split(' ')[1] == 'remove') {log(`Removing package ${data.split(' ')[2]}...`);let packs = localStorage.getItem('pkmPacks') || [];if (packs != []) {packs = JSON.parse(packs);const index = packs.indexOf(data.split(' ')[2]);if (index > -1) {array.splice(index, 1);} else {return `Package removal failed: Package not found.`;}}commands_data[data.split(' ')[2]] = null;localStorage.setItem('pkmPacks', JSON.stringify(packs));return `Package removed successfully.`;} }"
}
